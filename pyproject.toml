[project]
name = "livingdex"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "aiohttp==3.12.15",
    "aiohttp-jinja2==1.6",
    "aiohttp-sse==2.2.0",
    "pillow==11.3.0",
    "pythonnet==3.0.5",
    "typenv==0.2.0",
    "watchfiles==1.1.0",
]

[project.scripts]
livingdex = "livingdex.__main__:main"

[dependency-groups]
dev = [
    "mypy==1.17.1",
    "pytest==8.4.1",
    "ruff==0.12.11",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.mypy]
python_version = "3.13"
strict = true

# Disallow dynamic typing
disallow_any_unimported = true
#disallow_any_expr = true
disallow_any_decorated = true
#disallow_any_explicit = true

warn_unreachable = true


[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"
xfail_strict = true


[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PGH",   # pygrep-hooks
    "PTH",   # flake8-use-pathlib
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "T10",   # flake8-debugger
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
ignore = [
    "A003",  # builtin-attribute-shadowing
]
fixable = [
    "I",     # isort
    "F401",  # unused-import
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
]
dummy-variable-rgx = "^_$"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
split-on-trailing-comma = false
